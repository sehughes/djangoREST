# Generated by Django 2.0 on 2018-04-04 15:45

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgilePartNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_num', models.CharField(max_length=15)),
                ('part_type', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Cm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4, unique=True)),
                ('ip_space', models.GenericIPAddressField(unique=True)),
                ('netmask', models.GenericIPAddressField()),
                ('gateway_ip', models.GenericIPAddressField(protocol='ipv4')),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'cm',
            },
        ),
        migrations.CreateModel(
            name='ComponentLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(default=None, max_length=100)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'db_table': 'component_log',
            },
        ),
        migrations.CreateModel(
            name='ComponentLogError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(max_length=10)),
                ('model', models.CharField(max_length=50)),
                ('identifier', models.CharField(default=None, max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('firmware', models.CharField(default=None, max_length=50)),
                ('error', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'component_log_error',
            },
        ),
        migrations.CreateModel(
            name='ComponentProductCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'component_product_code',
            },
        ),
        migrations.CreateModel(
            name='ComponentVendors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'component_vendors',
            },
        ),
        migrations.CreateModel(
            name='Cpus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_model', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(default='Qualified', max_length=20)),
            ],
            options={
                'db_table': 'cpus',
            },
        ),
        migrations.CreateModel(
            name='DimmAppliance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locator', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_locator', models.CharField(blank=True, max_length=30, null=True)),
                ('asset_tag', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'dimm_appliance',
            },
        ),
        migrations.CreateModel(
            name='Dimms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dimm_model', models.CharField(max_length=50, unique=True)),
                ('dimm_size', models.CharField(max_length=10)),
                ('status', models.CharField(default='Qualified', max_length=50)),
            ],
            options={
                'db_table': 'dimms',
            },
        ),
        migrations.CreateModel(
            name='DriveAppliance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'drive_appliance',
            },
        ),
        migrations.CreateModel(
            name='DriveFirmwares',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drive_firmware', models.CharField(max_length=30)),
                ('drive_firmware_binary', models.CharField(blank=True, max_length=50, null=True)),
                ('is_upgradable', models.BooleanField(default=False)),
                ('fw_upgrade_method', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'drive_firmwares',
            },
        ),
        migrations.CreateModel(
            name='DriveModels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drive_name', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(default='Qualified', max_length=50)),
                ('drive_size_in_GB', models.IntegerField()),
                ('type', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'drive_models',
            },
        ),
        migrations.CreateModel(
            name='DriveSlots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drive_slot', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'drive_slots',
            },
        ),
        migrations.CreateModel(
            name='DriveSmartMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threshold', models.IntegerField()),
                ('drive_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.DriveModels')),
            ],
            options={
                'db_table': 'drive_smart_mapping',
            },
        ),
        migrations.CreateModel(
            name='Interfaces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.CharField(max_length=25)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('netmask', models.GenericIPAddressField(blank=True, null=True)),
                ('gateway', models.GenericIPAddressField(blank=True, null=True)),
                ('mac', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'interfaces',
            },
        ),
        migrations.CreateModel(
            name='Macs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'macs',
            },
        ),
        migrations.CreateModel(
            name='ModelAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_attribute', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'model_attributes',
            },
        ),
        migrations.CreateModel(
            name='ModelAttributesMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'model_attributes_mapping',
            },
        ),
        migrations.CreateModel(
            name='Models',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=15, unique=True)),
                ('state', models.BooleanField(choices=[(1, 'enable'), (0, 'disable')], default=True)),
            ],
            options={
                'db_table': 'models',
            },
        ),
        migrations.CreateModel(
            name='Modes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'modes',
            },
        ),
        migrations.CreateModel(
            name='OnBoardFirmwares',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=10)),
                ('version', models.CharField(blank=True, max_length=10, null=True)),
                ('required', models.BooleanField()),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Models')),
            ],
        ),
        migrations.CreateModel(
            name='ParentChildTestsAssoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'testfarm_parent_child_tests_assoc',
            },
        ),
        migrations.CreateModel(
            name='ParentTests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'testfarm_parent_tests',
            },
        ),
        migrations.CreateModel(
            name='ResourceAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_attribute', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'resource_attributes',
            },
        ),
        migrations.CreateModel(
            name='ResourceAttributesMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'resource_attributes_mapping',
            },
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('cm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Cm')),
            ],
            options={
                'db_table': 'resources',
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cm_serial', models.CharField(max_length=20)),
                ('rvbd_serial', models.CharField(max_length=20)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('outcome', models.CharField(blank=True, max_length=20, null=True)),
                ('role', models.CharField(blank=True, max_length=10, null=True)),
                ('log_dir', models.CharField(blank=True, max_length=50, null=True)),
                ('updated_time', models.DateTimeField()),
                ('mfg_sw_version', models.CharField(blank=True, default=None, max_length=60, null=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Models')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station', to='accounts.Resources')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supervisor', to='accounts.Resources')),
            ],
            options={
                'db_table': 'results',
            },
        ),
        migrations.CreateModel(
            name='Sku',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=50)),
                ('parent_sku', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='base_sku', to='accounts.Sku')),
            ],
            options={
                'db_table': 'sku',
            },
        ),
        migrations.CreateModel(
            name='SkuAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku_attribute', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'sku_attributes',
            },
        ),
        migrations.CreateModel(
            name='SkuAttributesMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=50, null=True)),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Sku')),
                ('sku_attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.SkuAttributes')),
            ],
            options={
                'db_table': 'sku_attributes_mapping',
            },
        ),
        migrations.CreateModel(
            name='SmartAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('smart_attribute', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'smart_attributes',
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_case', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'test_case',
            },
        ),
        migrations.CreateModel(
            name='TestCaseResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('outcome', models.CharField(blank=True, max_length=10, null=True)),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Results')),
                ('test_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.TestCase')),
            ],
            options={
                'db_table': 'testcase_result',
            },
        ),
        migrations.CreateModel(
            name='Tests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('mode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Modes')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Sku')),
            ],
            options={
                'db_table': 'tests',
            },
        ),
        migrations.CreateModel(
            name='TestSuite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_suite', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'test_suite',
            },
        ),
        migrations.CreateModel(
            name='TestWorkflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_workflow', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'test_workflow',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user', models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operator_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('fullname', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('cm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Cm')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Uut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cm_serial', models.CharField(blank=True, max_length=20, null=True)),
                ('rvbd_serial', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, default='active', max_length=20)),
                ('cm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Cm')),
                ('mac', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Macs')),
                ('model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Models')),
                ('sku', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Sku')),
                ('station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Resources')),
            ],
            options={
                'db_table': 'testfarm_uut',
            },
        ),
        migrations.CreateModel(
            name='WorkflowTestAssoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, null=True)),
                ('test_case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.TestCase')),
                ('workflow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.TestWorkflow')),
            ],
            options={
                'db_table': 'workflow_test_assoc',
            },
        ),
        migrations.CreateModel(
            name='WorkflowTestSuiteAssoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, null=True)),
                ('test_suite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.TestSuite')),
                ('workflow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.TestWorkflow')),
            ],
            options={
                'db_table': 'workflow_test_suite_assoc',
            },
        ),
        migrations.AddField(
            model_name='results',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Tests'),
        ),
        migrations.AddField(
            model_name='results',
            name='test_case',
            field=models.ManyToManyField(blank=True, through='accounts.TestCaseResult', to='accounts.TestCase'),
        ),
        migrations.AddField(
            model_name='results',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Users'),
        ),
        migrations.AddField(
            model_name='results',
            name='uut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Uut'),
        ),
        migrations.AddField(
            model_name='results',
            name='workflow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.TestWorkflow'),
        ),
        migrations.AddField(
            model_name='resourceattributesmapping',
            name='resource',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.Resources'),
        ),
        migrations.AddField(
            model_name='resourceattributesmapping',
            name='resource_attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.ResourceAttributes'),
        ),
        migrations.AddField(
            model_name='parentchildtestsassoc',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.ParentTests'),
        ),
        migrations.AddField(
            model_name='parentchildtestsassoc',
            name='test',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Tests'),
        ),
        migrations.AddField(
            model_name='modelattributesmapping',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Models'),
        ),
        migrations.AddField(
            model_name='modelattributesmapping',
            name='model_attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.ModelAttributes'),
        ),
        migrations.AddField(
            model_name='interfaces',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Resources'),
        ),
        migrations.AddField(
            model_name='interfaces',
            name='wired_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Interfaces'),
        ),
        migrations.AddField(
            model_name='drivesmartmapping',
            name='smart_attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.SmartAttributes'),
        ),
        migrations.AddField(
            model_name='drivemodels',
            name='allowed_modes',
            field=models.ManyToManyField(to='accounts.Modes'),
        ),
        migrations.AddField(
            model_name='drivemodels',
            name='appliance_models',
            field=models.ManyToManyField(through='accounts.DriveAppliance', to='accounts.Models'),
        ),
        migrations.AddField(
            model_name='drivemodels',
            name='component_product_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.ComponentProductCode'),
        ),
        migrations.AddField(
            model_name='drivemodels',
            name='component_vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.ComponentVendors'),
        ),
        migrations.AddField(
            model_name='drivefirmwares',
            name='drive_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.DriveModels'),
        ),
        migrations.AddField(
            model_name='driveappliance',
            name='allowed_slots',
            field=models.ManyToManyField(to='accounts.DriveSlots'),
        ),
        migrations.AddField(
            model_name='driveappliance',
            name='appliance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Models'),
        ),
        migrations.AddField(
            model_name='driveappliance',
            name='drive',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.DriveModels'),
        ),
        migrations.AddField(
            model_name='dimms',
            name='allowed_modes',
            field=models.ManyToManyField(to='accounts.Modes'),
        ),
        migrations.AddField(
            model_name='dimms',
            name='appliance_models',
            field=models.ManyToManyField(through='accounts.DimmAppliance', to='accounts.Models'),
        ),
        migrations.AddField(
            model_name='dimmappliance',
            name='appliance',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='accounts.Models'),
        ),
        migrations.AddField(
            model_name='dimmappliance',
            name='component_vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.ComponentVendors'),
        ),
        migrations.AddField(
            model_name='dimmappliance',
            name='dimm_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Dimms'),
        ),
        migrations.AddField(
            model_name='cpus',
            name='allowed_modes',
            field=models.ManyToManyField(to='accounts.Modes'),
        ),
        migrations.AddField(
            model_name='cpus',
            name='appliance_models',
            field=models.ManyToManyField(to='accounts.Models'),
        ),
        migrations.AddField(
            model_name='componentlogerror',
            name='result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Results'),
        ),
        migrations.AddField(
            model_name='componentlog',
            name='result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Results'),
        ),
        migrations.AlterUniqueTogether(
            name='drivefirmwares',
            unique_together={('drive_firmware', 'drive_model')},
        ),
    ]
